volumes:
  pg_data_eismoscraper:
  eismo_scraper_static:
  redis_data:

services:
  db:
    image: postgres:14.13-alpine
    environment:
      #  Создаст бд с такими данными для входа.
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data_eismoscraper:/var/lib/postgresql/data
    restart: unless-stopped


  redis:
    image: redis:alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped


  eismoinfo-app:
    image: notilttoday1/eismoinfo_app:08_04_2025
    # build: .
    volumes:
      - eismo_scraper_static:/code/collectedstatic
    depends_on:
      - db
      - redis
    healthcheck:
      test: curl --fail -s http://localhost:80/lt/api/v1/healthcheck || exit 1
      interval: 1h
      timeout: 3s
      retries: 3
    restart: unless-stopped



  # prometheus:
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./prometheus/:/etc/prometheus/
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #   ports:
  #     - "9090:9090"
  #   restart: unless-stopped

  nginx:
    image: nginx:1.27
    # network_mode: host  # Получает доступ ко всем портам хоста.
    ports:
      - "80:80"  # Привязать порт контейнера Nginx 80  к порту машины 80.
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - eismo_scraper_static:/etc/nginx/html/static/
    restart: unless-stopped

  # alertmanager:
  #   image: prom/alertmanager:latest
  #   env_file:
  #     - .env
  #   environment:
  #     - TELEGRAM_CHAT_ID=$TELEGRAM_CHAT_ID
  #     - TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN
  #   ports:
  #     - "9093:9093"
  #   volumes:
  #     - ./alertmanager/:/etc/alertmanager/
  #   command:
  #     - '--config.file=/etc/alertmanager/alertmanager.yml'


  celery:
    image: notilttoday1/eismoinfo_app:08_04_2025
    # build: .
    entrypoint: "/code/celery_starter.sh"
    depends_on:
      - redis
      - db
    restart: unless-stopped
